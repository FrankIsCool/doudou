log4j.rootLogger=info,stdout,info,debug,error
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%-5p] [%d{HH:mm:ss}] %c - %m%n

#日志输出的级别
log4j.logger.info=info
#调用的适配器
log4j.appender.info=com.common.log.LogAppender
#日志的排版格式
log4j.appender.info.layout=org.apache.log4j.PatternLayout
#设置排版格式
log4j.appender.info.layout.ConversionPattern=[%-5p] [%d{HH:mm:ss}] %c - %m%n
#单个文件的大小，超出再次创建新的文件
log4j.appender.info.MaxFileSize = 10M
log4j.appender.info.datePattern='.'yyyy-MM-dd
#设置日志输出级别
log4j.appender.info.Threshold = INFO 
log4j.appender.info.append=true
#日志输出的文件位置
log4j.appender.info.File=doudou-logs/balance/balance-info.log

log4j.logger.debug=debug
log4j.appender.debug=com.common.log.LogAppender
log4j.appender.debug.layout=org.apache.log4j.PatternLayout
log4j.appender.debug.layout.ConversionPattern=[%-5p] [%d{HH:mm:ss}] %c - %m%n
log4j.appender.debug.datePattern='.'yyyy-MM-dd
log4j.appender.debug.Threshold = DEBUG 
log4j.appender.debug.append=true
log4j.appender.debug.File=doudou-logs/balance/balance-debug.log

log4j.logger.error=error
log4j.appender.error=com.common.log.LogAppender
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=[%-5p] [%d{HH:mm:ss}] %c - %m%n
log4j.appender.error.datePattern='.'yyyy-MM-dd
log4j.appender.error.Threshold = ERROR 
log4j.appender.error.append=true
log4j.appender.error.File=doudou-logs/balance/balance-error.log


log4j.logger.browse = INFO,browse
log4j.appender.browse = com.common.log.LogAppender
log4j.appender.browse.File =doudou-logs/web/web-browse.log
log4j.appender.browse.DatePattern = '.'yyyy-MM-dd
log4j.appender.browse.Append = false
log4j.appender.browse.layout = org.apache.log4j.PatternLayout
log4j.appender.browse.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %5p %c{5}:%L - %m%n
log4j.appender.browse.datePattern='.'yyyy-MM-dd
log4j.appender.browse.Threshold = INFO
#
#log4j.appender.jms=org.apache.log4j.net.JMSAppender
#log4j.appender.jms.InitialContextFactoryName=org.apache.activemq.jndi.ActiveMQInitialContextFactory
#log4j.appender.jms.ProviderURL=tcp://52.82.63.46:61616
#log4j.appender.jms.TopicBindingName=logTopic
#log4j.appender.jms.TopicConnectionFactoryBindingName=ConnectionFactory





#开发日志将在本地输出，并输出SQL

#log4j.rootLogger=${log4j.leve},A1,DRF
#log4j.appender.A1=org.apache.log4j.ConsoleAppender
#log4j.appender.A1.layout=org.apache.log4j.PatternLayout
#log4j.appender.A1.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n
#log4j.appender.A1.layout.ConversionPattern=%d %5p [%F:%L] : %m%n
#
#log4j.appender.DRF=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.DRF.Threshold=${log4j.leve}
#log4j.appender.DRF.DatePattern='.'yyyy-MM-dd
#log4j.appender.DRF.File=logs/dalceviva-user.log
#log4j.appender.DRF.Append=true
#log4j.appender.DRF.layout=org.apache.log4j.PatternLayout
#log4j.appender.DRF.layout.ConversionPattern=[%-5p][%d{yyyyMMdd HH:mm:ss,SSS}][%C{1}:%L] %m%n

###输出SQL
log4j.logger.java.sql=DEBUG
log4j.logger.com.ibatis=DEBUG
log4j.logger.java.sql.Connection = DEBUG  
log4j.logger.java.sql.Statement = DEBUG  
log4j.logger.java.sql.PreparedStatement = DEBUG  
log4j.logger.java.sql.ResultSet = DEBUG
#配置logger扫描的包路径  这样才会打印sql
log4j.logger.com.impl.dao=DEBUG
